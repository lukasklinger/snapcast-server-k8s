image:
  repository: ghcr.io/lukasklinger/snapcast-server-k8s
  pullPolicy: IfNotPresent

  # Overrides the image tag whose default is the chart appVersion.
  tag: "main"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer

  annotations:
    external-dns.alpha.kubernetes.io/hostname: server.snapcast.chaosdorf.space.

  ports:
    - name: audio
      port: 1704

    - name: control
      port: 1705

    - name: tcp-stream-4951
      port: 4951

    - name: tcp-stream-4952
      port: 4952

    - name: tcp-stream-4953
      port: 4953

    - name: tcp-stream-4954
      port: 4954

ingress:
  enable: true
  port: 1780
  service: web
  host: snapcast.chaosdorf.space

  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod

  tls:
    - hosts:
      - snapcast.chaosdorf.space
      secretName: ingress-tls

resources:
  limits:
    cpu: 1
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 512Mi

nodeSelector: {}

tolerations: []

affinity: {}

# -- Snapserver configuration, see https://github.com/badaix/snapcast/blob/master/doc/configuration.md
config:
  audio:
    port: 1704

    # Default sample format: <sample rate>:<bits per sample>:<channels>
    sampleFormat: 48000:16:2

    # Default transport codec
    # (flac|ogg|opus|pcm)[:options]
    codec: flac

    # Default source stream read chunk size [ms].
    # The server will continously read this number of milliseconds from the source into buffer and pass this buffer to the encoder.
    # The encoded buffer is sent to the clients. Some codecs have a higher latency and will need more data, e.g. Flac will need ~26ms chunks
    chunkMS: 20

    # The end-to-end latency, from capturing a sample on the server until the sample is played-out on the client
    buffer: 1000

    # Send audio to muted clients
    sendToMuted: false

    # source URI of the PCM input stream, can be configured multiple times
    # The following notation is used in this paragraph:
    #  <angle brackets>: the whole expression must be replaced with your specific setting
    # [square brackets]: the whole expression is optional and can be left out
    # [key=value]: if you leave this option out, "value" will be the default for "key"
    #
    # Format: TYPE://host/path?name=<name>[&codec=<codec>][&sampleformat=<sampleformat>][&chunk_ms=<chunk ms>][&controlscript=<control script filename>]
    #  parameters have the form "key=value", they are concatenated with an "&" character
    #  parameter "name" is mandatory for all sources, while codec, sampleformat and chunk_ms are optional
    #  and will override the default codec, sampleformat or chunk_ms settings
    # Non blocking sources support the dryout_ms parameter: when no new data is read from the source, send silence to the clients
    # Available types are:
    # pipe: pipe:///<path/to/pipe>?name=<name>[&mode=create][&dryout_ms=2000], mode can be "create" or "read"
    # file: file:///<path/to/PCM/file>?name=<name>
    # process: process:///<path/to/process>?name=<name>[&dryout_ms=2000][&wd_timeout=0][&log_stderr=false][&params=<process arguments>]
    # tcp server: tcp://<listen IP, e.g. 127.0.0.1>:<port>?name=<name>[&mode=server]
    # tcp client: tcp://<server IP, e.g. 127.0.0.1>:<port>?name=<name>&mode=client
    # alsa: alsa://?name=<name>&device=<alsa device>[&send_silence=false][&idle_threshold=100][&silence_threshold_percent=0.0]
    # meta: meta:///<name of source#1>/<name of source#2>/.../<name of source#N>?name=<name>
    sources:
      - tcp://0.0.0.0:4951?name=tcp-stream-4951&mode=server
      - tcp://0.0.0.0:4952?name=tcp-stream-4952&mode=server
      - tcp://0.0.0.0:4953?name=tcp-stream-4953&mode=server
      - tcp://0.0.0.0:4954?name=tcp-stream-4954&mode=server
      - tcp://0.0.0.0:4850?name=mopidy&mode=server

  apis:
    http:
      enable: true
      port: 1780

    tcp:
      enable: true
      port: 1705

# template for the snapserver config file
configTemplate: |
  [http]
  enabled = {{ .Values.config.apis.http.enable }}
  port = {{ .Values.config.apis.http.port }}
  doc_root = /usr/share/snapserver/snapweb

  [tcp]
  enabled = {{ .Values.config.apis.tcp.enable }}
  port = {{ .Values.config.apis.tcp.port }}

  [stream]
  port = {{ .Values.config.audio.port }}
  sampleformat = {{ .Values.config.audio.sampleFormat }}
  codec = {{ .Values.config.audio.codec }}
  chunk_ms = {{ .Values.config.audio.chunkMS }}
  buffer = {{ .Values.config.audio.buffer }}
  send_to_muted = {{ .Values.config.audio.sendToMuted }}

  {{- range $src := .Values.config.audio.sources }}
  source = {{ $src }}
  {{- end }}
